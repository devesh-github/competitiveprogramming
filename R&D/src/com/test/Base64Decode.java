package com.test;

import org.apache.commons.codec.binary.Base64;

import java.util.Arrays;

public class Base64Decode {
	
    public static void main(String[] args) {
        String hello = "";

        //
        // Decode a previously encoded string using decodeBase64 method
        //
        byte[] decoded = Base64.decodeBase64(hello.getBytes());

        //
        // Print the decoded array
        //
        System.out.println(Arrays.toString(decoded));

        //
        // Convert the decoded byte[] back to the original string and print
        // the result.
        //
        String decodedString = new String(decoded);
        //System.out.println(hello + " = " + decodedString);
    }
    
    public static byte[] getBinaryValue (String base64) {
    	byte[] decoded = Base64.decodeBase64(base64.getBytes());
		return decoded;
    }
    
    public static String getStringValue (String base64) {
    	byte[] decoded = Base64.decodeBase64(base64.getBytes());
        String decodedString = new String(decoded);
        System.out.println(base64 + " = " + decodedString);
		return decodedString;
    }
    
}
